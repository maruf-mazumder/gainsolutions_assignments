[{"E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\index.js":"1","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\reportWebVitals.js":"2","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\App.js":"3","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\HeaderComponent.js":"4","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\FooterComponent.js":"5","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\ListUserComponent.jsx":"6","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\CreateStudentComponent.jsx":"7","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\CreateCourseComponent.jsx":"8","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\ListCourseComponent.jsx":"9","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\EditCourseComponent.jsx":"10","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\services\\ProjectService.js":"11"},{"size":547,"mtime":1617299252000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1489,"mtime":1617383362000,"results":"15","hashOfConfig":"13"},{"size":1741,"mtime":1617429786000,"results":"16","hashOfConfig":"13"},{"size":489,"mtime":1617342746000,"results":"17","hashOfConfig":"13"},{"size":3667,"mtime":1617434542000,"results":"18","hashOfConfig":"13"},{"size":6182,"mtime":1617434858000,"results":"19","hashOfConfig":"13"},{"size":6115,"mtime":1617438892000,"results":"20","hashOfConfig":"13"},{"size":3254,"mtime":1617439092000,"results":"21","hashOfConfig":"13"},{"size":8795,"mtime":1617448350000,"results":"22","hashOfConfig":"13"},{"size":1514,"mtime":1617448446000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5h2tx6",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\index.js",[],"E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\reportWebVitals.js",[],"E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\App.js",["49"],"import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ListUserComponent from './components/ListUserComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport CreateStudentComponent from './components/CreateStudentComponent';\nimport ListCourseComponent from './components/ListCourseComponent';\nimport CreateCourseComponent from './components/CreateCourseComponent';\nimport EditCourseComponent from './components/EditCourseComponent';\n\nfunction App() {\n  return (\n    <div>\n        <Router>\n              <HeaderComponent />\n                <div className=\"container\">\n                    <Switch> \n                          <Route path = \"/\" exact component = {ListUserComponent}></Route>\n                          <Route path = \"/students\" component = {ListUserComponent}></Route>\n                          <Route path = \"/add-student/:id\" component = {CreateStudentComponent}></Route>\n                          <Route path = \"/courses\" component = {ListCourseComponent}></Route>\n                          <Route path = \"/add-course/:id\" component = {CreateCourseComponent}></Route>\n                          <Route path = \"/edit-course/:id\" component = {EditCourseComponent}></Route>\n                    </Switch>\n                </div>\n              <FooterComponent />\n        </Router>\n    </div>\n    \n  );\n}\n\nexport default App;","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\HeaderComponent.js",["50","51","52"],"import React, { Component } from 'react'\r\nimport { Switch, Route, NavLink} from \"react-router-dom\";\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <div><a href=\"#\" className=\"navbar-brand\">Student Management System</a></div>\r\n\r\n                    <Nav className=\"ml-auto\" variant=\"pills\" defaultActiveKey=\"/students\">\r\n                        <Nav.Item>\r\n                            <Nav.Link as={NavLink} to=\"/students\" exact>Students</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link as={NavLink} to=\"/courses\">Courses</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n\r\n{/* \r\n                    <div className=\"navbar-nav ml-auto \">\r\n                        <li className=\"nav-item\">\r\n                        <Link to={\"/courses\"} activeClassName=\"selected\" className=\"nav-link\">\r\n                            Courses\r\n                        </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <Link to={\"/students\"} exact activeClassName=\"selected\" className=\"nav-link\">\r\n                            Students\r\n                        </Link>\r\n                        </li>\r\n                    </div> */}\r\n\r\n\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\FooterComponent.js",[],"E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\ListUserComponent.jsx",[],"E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\CreateStudentComponent.jsx",[],"E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\CreateCourseComponent.jsx",["53","54","55"],"import React, { Component } from 'react'\r\nimport ProjectService from '../services/ProjectService';\r\nimport { InputGroup,FormControl,Button } from 'react-bootstrap';\r\n\r\nclass CreateCourseComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    \r\n        this.state = {\r\n            students: [],\r\n            // step 2\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            studentId: '',\r\n        }\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeAddSelectorHandler = this.changeAddSelectorHandler.bind(this);\r\n        this.saveOrUpdateEmployee = this.saveOrUpdateEmployee.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount(){\r\n\r\n        ProjectService.getStudents().then( (res) =>{\r\n            this.setState({ students: res.data});\r\n        });\r\n\r\n        // step 4\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            ProjectService.getCourseById(this.state.id).then( (res) =>{\r\n                let employee = res.data;\r\n                this.setState({firstName: employee.firstName,\r\n                    lastName: employee.lastName,\r\n                    emailId : employee.emailId\r\n                });\r\n            });\r\n        }        \r\n    }\r\n    saveOrUpdateEmployee = (e) => {\r\n        e.preventDefault();\r\n        let student = {_id: this.state.studentId};\r\n        let course = {name: this.state.name, students: student};\r\n        console.log('subject => ' + JSON.stringify(course));\r\n\r\n        // step 5\r\n        if(this.state.id === '_add'){\r\n            ProjectService.createCourses(course).then(res =>{\r\n                this.props.history.push('/courses');\r\n            });\r\n        }else{\r\n            ProjectService.updateEmployee(course, this.state.id).then( res => {\r\n                this.props.history.push('/courses');\r\n            });\r\n        }\r\n    }\r\n    \r\n    changeNameHandler= (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    changeAddSelectorHandler= (event) => {\r\n        this.setState({studentId: event.target.value});\r\n    }\r\n\r\n\r\n    cancel(){\r\n        this.props.history.push('/courses');\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center\">Add Course</h3>\r\n        }else{\r\n            return <h3 className=\"text-center\">Update Course</h3>\r\n        }\r\n    }\r\n\r\n    setRemoveDropdown(){\r\n        if(this.state.id === '_add'){\r\n            return null\r\n        }else{\r\n            return <div className = \"form-group\">\r\n                                            \r\n            <label> Remove Student: </label>\r\n\r\n                <select className=\"form-control\" onChange={this.changeAddSelectorHandler} value={this.state.studentId}>\r\n                    <option selected>Select Student</option>\r\n                    {\r\n                        this.state.courses.map(\r\n                            course =>\r\n                            <option key={course} value={course.id}>\r\n                                {course.name}\r\n                            </option>\r\n                        )\r\n                    }\r\n                </select>\r\n            </div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                <div className = \"card-title\">\r\n                                    {\r\n                                        this.getTitle()\r\n                                    }\r\n                                </div>\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Subject Name: </label>\r\n                                            <input placeholder=\"Subject Name\" name=\"name\" className=\"form-control\" \r\n                                                value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                        </div>\r\n                                        \r\n                                        <div className = \"form-group\">\r\n                                            \r\n                                            <label> Add Student: </label>\r\n\r\n                                            <select  className=\"form-control\" onChange={this.changeAddSelectorHandler}  value={this.state.studentId}>\r\n                                                <option selected disabled>Select Student</option>\r\n                                                {\r\n                                                    this.state.students.map(\r\n                                                        student =>\r\n                                                        <option key={student._id} value={student._id}>\r\n                                                            {student.name}\r\n                                                        </option>\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        {\r\n                                            this.setRemoveDropdown()\r\n                                        }\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.saveOrUpdateEmployee}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateCourseComponent","E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\ListCourseComponent.jsx",[],"E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\components\\EditCourseComponent.jsx",[],"E:\\video\\MERN stack\\student-course\\student-course-client\\react-frontend\\src\\services\\ProjectService.js",[],{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":16},{"ruleId":"56","severity":1,"message":"61","line":2,"column":18,"nodeType":"58","messageId":"59","endLine":2,"endColumn":23},{"ruleId":"62","severity":1,"message":"63","line":19,"column":26,"nodeType":"64","endLine":19,"endColumn":63},{"ruleId":"56","severity":1,"message":"65","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":20},{"ruleId":"56","severity":1,"message":"66","line":3,"column":21,"nodeType":"58","messageId":"59","endLine":3,"endColumn":32},{"ruleId":"56","severity":1,"message":"67","line":3,"column":33,"nodeType":"58","messageId":"59","endLine":3,"endColumn":39},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used."]